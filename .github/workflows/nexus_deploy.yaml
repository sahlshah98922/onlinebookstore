name: Java CI with Maven + Nexus

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    # Step 1: Build package
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml
      shell: cmd

    # Step 2: Run Tests
    - name: Run Tests
      run: mvn -B test --file pom.xml
      shell: cmd

    # Step 3: Deploy artifact (WAR) to Nexus
    - name: Upload WAR to Nexus
      run: |
        mvn deploy:deploy-file ^
        -DgroupId=onlinebookstore ^
        -DartifactId=onlinebookstore ^
        -Dversion=0.0.1-SNAPSHOT ^
        -Dpackaging=war ^
        -Dfile=target/onlinebookstore-0.0.1-SNAPSHOT.war ^
        -DrepositoryId=nexus-snapshots ^
        -Durl=http://192.168.10.130:8081/repository/maven-snapshots/


      env:
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      shell: cmd

    # Step 4: Download WAR from Nexus
    - name: Download WAR from Nexus
      run: |
        $url = "http://<NEXUS_URL>/repository/maven-releases/com/example/onlinebookstore/0.0.1-SNAPSHOT/onlinebookstore-0.0.1-SNAPSHOT.war"
        $output = "onlinebookstore.war"
        Invoke-WebRequest -Uri $url -OutFile $output `
          -Headers @{Authorization=("Basic " + [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes("${{ secrets.NEXUS_USER }}:${{ secrets.NEXUS_PASS }}")))}

    # Step 5: Deploy to Tomcat
    - name: Deploy to Tomcat
      run: |
        Invoke-RestMethod `
          -Uri "${{ secrets.TOMCAT_URL }}/manager/text/deploy?path=/myapp&update=true" `
          -Method Put `
          -InFile "onlinebookstore.war" `
          -Credential (New-Object System.Management.Automation.PSCredential("${{ secrets.TOMCAT_USER }}", (ConvertTo-SecureString "${{ secrets.TOMCAT_PASS }}" -AsPlainText -Force)))
      shell: powershell
